/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DownloaderMediaRouteImport } from './routes/downloader/$media'

const IndexLazyRouteImport = createFileRoute('/')()
const DownloaderIndexLazyRouteImport = createFileRoute('/downloader/')()

const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const DownloaderIndexLazyRoute = DownloaderIndexLazyRouteImport.update({
  id: '/downloader/',
  path: '/downloader/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/downloader/index.lazy').then((d) => d.Route),
)
const DownloaderMediaRoute = DownloaderMediaRouteImport.update({
  id: '/downloader/$media',
  path: '/downloader/$media',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/downloader/$media': typeof DownloaderMediaRoute
  '/downloader': typeof DownloaderIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/downloader/$media': typeof DownloaderMediaRoute
  '/downloader': typeof DownloaderIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/downloader/$media': typeof DownloaderMediaRoute
  '/downloader/': typeof DownloaderIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/downloader/$media' | '/downloader'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/downloader/$media' | '/downloader'
  id: '__root__' | '/' | '/downloader/$media' | '/downloader/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  DownloaderMediaRoute: typeof DownloaderMediaRoute
  DownloaderIndexLazyRoute: typeof DownloaderIndexLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/downloader/': {
      id: '/downloader/'
      path: '/downloader'
      fullPath: '/downloader'
      preLoaderRoute: typeof DownloaderIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/downloader/$media': {
      id: '/downloader/$media'
      path: '/downloader/$media'
      fullPath: '/downloader/$media'
      preLoaderRoute: typeof DownloaderMediaRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  DownloaderMediaRoute: DownloaderMediaRoute,
  DownloaderIndexLazyRoute: DownloaderIndexLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
